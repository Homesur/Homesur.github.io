const caseId = new URLSearchParams(window.location.search).get("id");

if (!caseId) {
  alert("ID –¥–µ–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL");
  window.location.href = "index.html";
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–µ–ª–∞
firebase.firestore().collection("cases").doc(caseId).get().then(doc => {
  if (!doc.exists) {
    alert("–î–µ–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
    return;
  }

  const data = doc.data();
  document.getElementById("case-title").textContent = data.title || "‚Äî";
  document.getElementById("client-name").textContent = `${data.firstname || ""} ${data.lastname || ""}`;
  loadServices();
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏
function addService() {
  const date = document.getElementById("service-date").value;
  const start = document.getElementById("start-time").value;
  const end = document.getElementById("end-time").value;
  const description = document.getElementById("service-description").value.trim();

  if (!date || !start || !end || !description) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
    return;
  }

  const serviceData = {
    date,
    start,
    end,
    description,
    createdAt: firebase.firestore.FieldValue.serverTimestamp()
  };

  firebase.firestore().collection("cases").doc(caseId).collection("services").add(serviceData).then(() => {
    clearForm();
    loadServices();
  });
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
function clearForm() {
  document.getElementById("service-date").value = "";
  document.getElementById("start-time").value = "";
  document.getElementById("end-time").value = "";
  document.getElementById("service-description").value = "";

  const saveBtn = document.querySelector(".save-btn");
  saveBtn.textContent = "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ";
  saveBtn.onclick = addService;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ª—É–≥
function loadServices() {
  const list = document.getElementById("service-list");
  list.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";
  let totalMinutes = 0;

  firebase.firestore().collection("cases").doc(caseId).collection("services")
    .orderBy("createdAt", "desc")
    .get().then(snapshot => {
      list.innerHTML = "";

      if (snapshot.empty) {
        list.innerHTML = "<p>–£—Å–ª—É–≥–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.</p>";
        return;
      }

      snapshot.forEach(doc => {
        const s = doc.data();

        const [startH, startM] = s.start.split(":").map(Number);
        const [endH, endM] = s.end.split(":").map(Number);
        const startTotal = startH * 60 + startM;
        const endTotal = endH * 60 + endM;
        const duration = endTotal - startTotal;
        totalMinutes += duration;

        const hours = Math.floor(duration / 60);
        const minutes = duration % 60;
        const durationText = `${hours ? hours + " —á–∞—Å" : ""}${minutes ? " " + minutes + " –º–∏–Ω" : ""}`.trim() || "–º–µ–Ω–µ–µ –º–∏–Ω—É—Ç—ã";

        const item = document.createElement("div");
        item.className = "case-card fade-in";
        item.innerHTML = `
          <p><strong>${s.date}</strong> –Ω–∞—á–∞–ª–æ ${s.start} –æ–∫–æ–Ω—á–∞–Ω–∏–µ ${s.end} –∑–∞—Ç—Ä–∞—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ ${durationText}</p>
          <p>${s.description}</p>
          <button onclick="editService('${doc.id}', '${s.date}', '${s.start}', '${s.end}', \`${s.description.replace(/`/g, "\\`")}\`)">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
          <button onclick="deleteService('${doc.id}')">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
        `;
        list.appendChild(item);
      });

      const totalHours = Math.floor(totalMinutes / 60);
      const totalMins = totalMinutes % 60;
      const summary = document.createElement("div");
      summary.className = "case-card fade-in";
      summary.innerHTML = `<p><strong>‚è± –û–±—â–µ–µ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è:</strong> ${totalHours} —á–∞—Å${totalHours !== 1 ? "–∞" : ""} ${totalMins} –º–∏–Ω</p>`;
      list.appendChild(summary);
    });
}

// –£–¥–∞–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏
function deleteService(serviceId) {
  if (!confirm("–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É?")) return;

  firebase.firestore().collection("cases").doc(caseId).collection("services").doc(serviceId).delete().then(() => {
    loadServices();
  });
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
function editService(id, date, start, end, description) {
  document.getElementById("service-date").value = date;
  document.getElementById("start-time").value = start;
  document.getElementById("end-time").value = end;
  document.getElementById("service-description").value = description;

  const saveBtn = document.querySelector(".save-btn");
  saveBtn.textContent = "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è";
  saveBtn.onclick = function () {
    const newDate = document.getElementById("service-date").value;
    const newStart = document.getElementById("start-time").value;
    const newEnd = document.getElementById("end-time").value;
    const newDesc = document.getElementById("service-description").value.trim();

    if (!newDate || !newStart || !newEnd || !newDesc) {
      alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");
      return;
    }

    firebase.firestore().collection("cases").doc(caseId).collection("services").doc(id).update({
      date: newDate,
      start: newStart,
      end: newEnd,
      description: newDesc
    }).then(() => {
      clearForm();
      loadServices();
    });
  };
}

// –≠–∫—Å–ø–æ—Ä—Ç —É—Å–ª—É–≥ –≤ Excel (.xlsx)
function exportToExcel() {
  firebase.firestore().collection("cases").doc(caseId).collection("services")
    .orderBy("createdAt", "asc")
    .get().then(snapshot => {
      if (snapshot.empty) {
        alert("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.");
        return;
      }

      const rows = [["–î–∞—Ç–∞", "–ù–∞—á–∞–ª–æ", "–û–∫–æ–Ω—á–∞–Ω–∏–µ", "–û–ø–∏—Å–∞–Ω–∏–µ", "–ó–∞—Ç—Ä–∞—á–µ–Ω–æ"]];
      let totalMinutes = 0;

      snapshot.forEach(doc => {
        const s = doc.data();
        const [startH, startM] = s.start.split(":").map(Number);
        const [endH, endM] = s.end.split(":").map(Number);
        const startTotal = startH * 60 + startM;
        const endTotal = endH * 60 + endM;
        const duration = endTotal - startTotal;
        totalMinutes += duration;

        const hours = Math.floor(duration / 60);
        const minutes = duration % 60;
        const durationText = `${hours ? hours + " —á–∞—Å" : ""}${minutes ? " " + minutes + " –º–∏–Ω" : ""}`.trim() || "–º–µ–Ω–µ–µ –º–∏–Ω—É—Ç—ã";

        rows.push([
          s.date,
          s.start,
          s.end,
          s.description,
          durationText
        ]);
      });

      const totalHours = Math.floor(totalMinutes / 60);
      const totalMins = totalMinutes % 60;
      const summaryText = `${totalHours} —á–∞—Å${totalHours !== 1 ? "–∞" : ""} ${totalMins} –º–∏–Ω`;

      rows.push(["", "", "", "‚è± –û–±—â–µ–µ –≤—Ä–µ–º—è", summaryText]);

      const worksheet = XLSX.utils.aoa_to_sheet(rows);
      const workbook = XLSX.utils.book_new();
      XLSX.utils.book_append_sheet(workbook, worksheet, "–£—Å–ª—É–≥–∏");

      XLSX.writeFile(workbook, `–£—Å–ª—É–≥–∏_${caseId}.xlsx`);
    });
}
